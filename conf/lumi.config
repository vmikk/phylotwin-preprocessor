
// HPC-specific params
executor {
    name            = 'slurm'
    queueSize       = 99          // on `standard` partition, max jobs limit is 120 (100 running)
    submitRateLimit = '5 sec'
    pollInterval    = '1sec'
    retry.delay     = '1sec'
}

// Process configuration
process {

    // Error strategy
    errorStrategy = { task.exitStatus in [1,104,125,130,134,135,137,139,140,143,255] ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

    // Total resource limits
    // resourceLimits = [ cpus: 24, memory: 200.GB, time: 72.h ]

    // Default resources
    // https://nextflow.io/docs/latest/process.html#dynamic-task-resources
    cpus   = 1  // { task.attempt > 1 ? task.previousTrace.cpus * 2 : 1 }
    memory = { task.attempt > 1 ? task.previousTrace.memory * 2 : (5.GB) }
    time   = { task.attempt > 1 ? task.previousTrace.time * 2 : (1.h) }

    // Process-specific resource limits

    withName:count_occurrences {
        cpus        = 8
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (5.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (30.min) }
        ext.tempDir = null
    }

    withName:define_species_set {
        cpus        = 1
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (5.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (30.min) }
        ext.tempDir = null
    }

    withName:define_species_set_batched {
        cpus        = 1
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (6.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (30.min) }
        ext.tempDir = null
    }

    withName:pool_species_lists {
        cpus        = 1
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (1.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (20.min) }
        ext.tempDir = null
    }

    withName:prepare_species {
        cpus        = 4
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (2.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (20.min) }
        ext.tempDir = null
    }

    withName:prepare_species_batched {
        cpus        = 4
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (5.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (2.hours) }
        ext.tempDir = null
    }

    withName:dbscan {
        cpus        = 2
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (3.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (2.hours) }
        ext.tempDir = null
    }

    withName:dbscan_batched {
        cpus        = 2
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (3.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (20.hours) }
        ext.tempDir = null
    }

    withName:process_dbscan {
        cpus        = 2
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (10.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (20.min) }
        ext.tempDir = null
    }

    withName:process_dbscan_batched {
        cpus        = 2
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (10.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (2.hours) }
        ext.tempDir = null
    }

    withName:filter_and_bin {
        cpus        = 2
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (30.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (20.min) }
        ext.tempDir = null
    }

    withName:filter_and_bin_batched {
        cpus        = 4
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (30.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (2.hours) }
        ext.tempDir = null
    }

    withName:count_outliers {
        cpus        = 4
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (20.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (40.min) }
        ext.tempDir = null
    }

    withName:pool_parquets {
        cpus        = 4
        memory      = { task.attempt > 1 ? task.previousTrace.memory * 2 : (10.GB) }
        time        = { task.attempt > 1 ? task.previousTrace.time * 2 : (30.min) }
        ext.tempDir = null
    }
}

